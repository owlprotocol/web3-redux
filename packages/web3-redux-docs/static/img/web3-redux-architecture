<mxfile host="app.diagrams.net" modified="2022-07-18T11:24:54.475Z" agent="5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.114 Safari/537.36" etag="pUqqlWIngtrEa8R8F2FR" version="20.0.1" type="github">
  <diagram id="gNUZKU47G5ZhGun3ng5r" name="Page-1">
    <mxGraphModel dx="1873" dy="942" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="1qiyT1-d7huw2gus4alH-2" value="React Component" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="240" y="240" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-3" value="Hooks" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="240" y="320" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-4" value="Action" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="400" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-5" value="Root Reducer" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="560" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-6" value="Dexie CRUD" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="480" y="560" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-7" value="Saga" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="480" y="480" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-8" value="Selector" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="160" y="400" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-9" value="UseLiveQuery" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry y="400" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-10" value="Redux State&lt;br&gt;(in-memory)" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="160" y="880" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-11" value="IndexedDB&lt;br&gt;(persisent)" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="320" y="880" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-13" value="" style="strokeWidth=2;html=1;shape=mxgraph.flowchart.annotation_2;align=left;labelPosition=right;pointerEvents=1;" vertex="1" parent="1">
          <mxGeometry x="110" y="760" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-14" value="&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;Dexie.js useLiveQuery&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;hook&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;is used for various queries like&lt;/span&gt;&lt;/div&gt;&lt;b&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;useGet, useGetBulk, useWhere&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;which dynamically update&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;based on state changes.&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-265" y="380" width="190" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-17" value="&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;Selectors&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;query data&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;directly from the in-memory &lt;br&gt;redux state. They can have &lt;br&gt;additional logic to parse data&lt;br&gt;returned by &lt;b&gt;redux-orm &lt;/b&gt;selectors.&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-300" y="490" width="190" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-18" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;Hooks &lt;/b&gt;(custom or &lt;br&gt;included in &lt;b&gt;web3-redux&lt;/b&gt;)&lt;br&gt;live inside React components, &lt;br&gt;and enable combining &lt;br&gt;selectors with dispatching actions.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-270" y="270" width="200" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-19" value="&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;redux-saga&lt;/b&gt;&amp;nbsp;is used to write &lt;br&gt;and fetch data asynchronously &lt;br&gt;from the network or indexedDB.&lt;br&gt;&lt;br&gt;This is where RPC calls are &lt;br&gt;made to fetch &lt;b&gt;blocks&lt;/b&gt;, &lt;br&gt;&lt;b&gt;transactions&lt;/b&gt;, &lt;b&gt;events&lt;/b&gt;, &lt;br&gt;and manage subscriptions.&lt;br&gt;&lt;br&gt;Sagas then dispatch new &lt;br&gt;actions to update the &lt;b&gt;state&lt;/b&gt;.&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="640" y="490" width="180" height="160" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-20" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;redux-orm &lt;/b&gt;is used to mutate&lt;br&gt;the redux state in a&amp;nbsp;&lt;br&gt;normalized way with each object&lt;br&gt;having unique ids.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-80" y="750" width="190" height="60" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-21" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;Dexie.js&amp;nbsp;&lt;/b&gt;is used to mutate&lt;br&gt;the IndexedDB state in a&amp;nbsp;&lt;br&gt;normalized way with each object&lt;br&gt;having unique ids.&lt;br&gt;&lt;b&gt;Dexie.js &lt;/b&gt;also supports&lt;br&gt;compound indices which enable&lt;br&gt;efficient querying.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="490" y="740" width="190" height="100" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-31" value="Mutate State" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="1qiyT1-d7huw2gus4alH-22" target="1qiyT1-d7huw2gus4alH-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-22" value="Redux ORM" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="160" y="760" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-32" value="Mutate State" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="1qiyT1-d7huw2gus4alH-23" target="1qiyT1-d7huw2gus4alH-11">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-23" value="Dexie.js" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="760" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-28" value="" style="strokeWidth=2;html=1;shape=mxgraph.flowchart.annotation_2;align=left;labelPosition=right;pointerEvents=1;direction=west;" vertex="1" parent="1">
          <mxGeometry x="450" y="760" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-29" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;Redux &lt;/b&gt;state is an in-memory &lt;br&gt;JSON object modified by &lt;br&gt;actions and reducers.&lt;br&gt;&lt;br&gt;We need this to store non-encodable &lt;br&gt;objects that are instantiated using&lt;br&gt;data from the persistent state.&lt;br&gt;&lt;br&gt;For example &lt;b&gt;Web3.eth.Contract&lt;/b&gt;&amp;nbsp;&lt;br&gt;objects used for contract &lt;br&gt;calls and event subscriptions&amp;nbsp;&lt;br&gt;are instantiated using the stored&lt;br&gt;&lt;b&gt;address&lt;/b&gt; and &lt;b&gt;ABI&lt;/b&gt;.&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="90" y="980" width="210" height="190" as="geometry" />
        </mxCell>
        <mxCell id="1qiyT1-d7huw2gus4alH-33" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;IndexedDB &lt;/b&gt;is the modern browser &lt;br&gt;database we use for persistent &lt;br&gt;storage and indexing.&lt;br&gt;&amp;nbsp;&lt;br&gt;We need this to store non-encodable &lt;br&gt;objects that are instantiated using&lt;br&gt;data from the persistent state.&lt;br&gt;&lt;br&gt;For example &lt;b&gt;Web3.eth.Contract&lt;/b&gt;&amp;nbsp;&lt;br&gt;objects used for contract &lt;br&gt;calls and event subscriptions&amp;nbsp;&lt;br&gt;are instantiated using the stored&lt;br&gt;&lt;b&gt;address&lt;/b&gt; and &lt;b&gt;ABI&lt;/b&gt;.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="290" y="980" width="210" height="190" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
